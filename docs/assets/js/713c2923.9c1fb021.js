"use strict";(self.webpackChunkdocusaurus_2=self.webpackChunkdocusaurus_2||[]).push([[9083],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var o=a.createContext({}),c=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(o.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,o=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(n),d=i,m=u["".concat(o,".").concat(d)]||u[d]||h[d]||r;return n?a.createElement(m,s(s({ref:t},p),{},{components:n})):a.createElement(m,s({ref:t},p))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,s=new Array(r);s[0]=u;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l.mdxType="string"==typeof e?e:i,s[1]=l;for(var c=2;c<r;c++)s[c]=n[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},7971:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return o},metadata:function(){return c},toc:function(){return p},default:function(){return u}});var a=n(7462),i=n(3366),r=(n(7294),n(3905)),s=["components"],l={id:"list-activity",title:"ListActivity"},o=void 0,c={unversionedId:"schema/objects/list-activity",id:"schema/objects/list-activity",isDocsHomePage:!1,title:"ListActivity",description:"User list activity (anime & manga updates)",source:"@site/docs/schema/objects/list-activity.mdx",sourceDirName:"schema/objects",slug:"/schema/objects/list-activity",permalink:"/graphql-markdown/schema/objects/list-activity",tags:[],version:"current",frontMatter:{id:"list-activity",title:"ListActivity"},sidebar:"schemaSidebar",previous:{title:"InternalPage",permalink:"/graphql-markdown/schema/objects/internal-page"},next:{title:"ListScoreStats",permalink:"/graphql-markdown/schema/objects/list-score-stats"}},p=[{value:"Fields",id:"fields",children:[]}],h={toc:p};function u(e){var t=e.components,n=(0,i.Z)(e,s);return(0,r.kt)("wrapper",(0,a.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"User list activity (anime & manga updates)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-graphql"},"type ListActivity {\n  id: Int!\n  userId: Int\n  type: ActivityType\n  replyCount: Int!\n  status: String\n  progress: String\n  isLocked: Boolean\n  isSubscribed: Boolean\n  likeCount: Int!\n  isLiked: Boolean\n  siteUrl: String\n  createdAt: Int!\n  user: User\n  media: Media\n  replies: [ActivityReply]\n  likes: [User]\n}\n")),(0,r.kt)("h3",{id:"fields"},"Fields"),(0,r.kt)("h4",{id:"id-int"},(0,r.kt)("inlineCode",{parentName:"h4"},"id")," (",(0,r.kt)("a",{parentName:"h4",href:"/schema/scalars/int"},(0,r.kt)("inlineCode",{parentName:"a"},"Int!")),")"),(0,r.kt)("p",null,"The id of the activity"),(0,r.kt)("h4",{id:"userid-int"},(0,r.kt)("inlineCode",{parentName:"h4"},"userId")," (",(0,r.kt)("a",{parentName:"h4",href:"/schema/scalars/int"},(0,r.kt)("inlineCode",{parentName:"a"},"Int")),")"),(0,r.kt)("p",null,"The user id of the activity's creator"),(0,r.kt)("h4",{id:"type-activitytype"},(0,r.kt)("inlineCode",{parentName:"h4"},"type")," (",(0,r.kt)("a",{parentName:"h4",href:"/schema/enums/activity-type"},(0,r.kt)("inlineCode",{parentName:"a"},"ActivityType")),")"),(0,r.kt)("p",null,"The type of activity"),(0,r.kt)("h4",{id:"replycount-int"},(0,r.kt)("inlineCode",{parentName:"h4"},"replyCount")," (",(0,r.kt)("a",{parentName:"h4",href:"/schema/scalars/int"},(0,r.kt)("inlineCode",{parentName:"a"},"Int!")),")"),(0,r.kt)("p",null,"The number of activity replies"),(0,r.kt)("h4",{id:"status-string"},(0,r.kt)("inlineCode",{parentName:"h4"},"status")," (",(0,r.kt)("a",{parentName:"h4",href:"/schema/scalars/string"},(0,r.kt)("inlineCode",{parentName:"a"},"String")),")"),(0,r.kt)("p",null,"The list item's textual status"),(0,r.kt)("h4",{id:"progress-string"},(0,r.kt)("inlineCode",{parentName:"h4"},"progress")," (",(0,r.kt)("a",{parentName:"h4",href:"/schema/scalars/string"},(0,r.kt)("inlineCode",{parentName:"a"},"String")),")"),(0,r.kt)("p",null,"The list progress made"),(0,r.kt)("h4",{id:"islocked-boolean"},(0,r.kt)("inlineCode",{parentName:"h4"},"isLocked")," (",(0,r.kt)("a",{parentName:"h4",href:"/schema/scalars/boolean"},(0,r.kt)("inlineCode",{parentName:"a"},"Boolean")),")"),(0,r.kt)("p",null,"If the activity is locked and can receive replies"),(0,r.kt)("h4",{id:"issubscribed-boolean"},(0,r.kt)("inlineCode",{parentName:"h4"},"isSubscribed")," (",(0,r.kt)("a",{parentName:"h4",href:"/schema/scalars/boolean"},(0,r.kt)("inlineCode",{parentName:"a"},"Boolean")),")"),(0,r.kt)("p",null,"If the currently authenticated user is subscribed to the activity"),(0,r.kt)("h4",{id:"likecount-int"},(0,r.kt)("inlineCode",{parentName:"h4"},"likeCount")," (",(0,r.kt)("a",{parentName:"h4",href:"/schema/scalars/int"},(0,r.kt)("inlineCode",{parentName:"a"},"Int!")),")"),(0,r.kt)("p",null,"The amount of likes the activity has"),(0,r.kt)("h4",{id:"isliked-boolean"},(0,r.kt)("inlineCode",{parentName:"h4"},"isLiked")," (",(0,r.kt)("a",{parentName:"h4",href:"/schema/scalars/boolean"},(0,r.kt)("inlineCode",{parentName:"a"},"Boolean")),")"),(0,r.kt)("p",null,"If the currently authenticated user liked the activity"),(0,r.kt)("h4",{id:"siteurl-string"},(0,r.kt)("inlineCode",{parentName:"h4"},"siteUrl")," (",(0,r.kt)("a",{parentName:"h4",href:"/schema/scalars/string"},(0,r.kt)("inlineCode",{parentName:"a"},"String")),")"),(0,r.kt)("p",null,"The url for the activity page on the AniList website"),(0,r.kt)("h4",{id:"createdat-int"},(0,r.kt)("inlineCode",{parentName:"h4"},"createdAt")," (",(0,r.kt)("a",{parentName:"h4",href:"/schema/scalars/int"},(0,r.kt)("inlineCode",{parentName:"a"},"Int!")),")"),(0,r.kt)("p",null,"The time the activity was created at"),(0,r.kt)("h4",{id:"user-user"},(0,r.kt)("inlineCode",{parentName:"h4"},"user")," (",(0,r.kt)("a",{parentName:"h4",href:"/schema/objects/user"},(0,r.kt)("inlineCode",{parentName:"a"},"User")),")"),(0,r.kt)("p",null,"The owner of the activity"),(0,r.kt)("h4",{id:"media-media"},(0,r.kt)("inlineCode",{parentName:"h4"},"media")," (",(0,r.kt)("a",{parentName:"h4",href:"/schema/objects/media"},(0,r.kt)("inlineCode",{parentName:"a"},"Media")),")"),(0,r.kt)("p",null,"The associated media to the activity update"),(0,r.kt)("h4",{id:"replies-activityreply"},(0,r.kt)("inlineCode",{parentName:"h4"},"replies")," (",(0,r.kt)("a",{parentName:"h4",href:"/schema/objects/activity-reply"},(0,r.kt)("inlineCode",{parentName:"a"},"[ActivityReply]")),")"),(0,r.kt)("p",null,"The written replies to the activity"),(0,r.kt)("h4",{id:"likes-user"},(0,r.kt)("inlineCode",{parentName:"h4"},"likes")," (",(0,r.kt)("a",{parentName:"h4",href:"/schema/objects/user"},(0,r.kt)("inlineCode",{parentName:"a"},"[User]")),")"),(0,r.kt)("p",null,"The users who liked the activity"))}u.isMDXComponent=!0}}]);